{"version":3,"sources":["views/HomeView.jsx","data/students.js","data/studentsSortedLowest.js","data/studentsSortedHighest.js","data/studentsSortedAlpha.js","data/studentsSortedRandom.js","views/RaisedHandsView.jsx","views/ReactionsView.jsx","views/PickStudentView.jsx","App.js","index.js"],"names":["HomeView","className","to","style","visibility","students","studentsSortedLowest","studentsSortedHighest","studentsSortedAlpha","studentsSortedRandom","RaisedHandsView","useState","studentsArray","setStudentsArray","showFirst","setShowFirst","showSecond","setShowSecond","useEffect","firstTimer","setTimeout","firstDelay","secondTimer","secondDelay","clearTimeout","color","loading","size","onChange","e","sort","prevState","sortStudentsArray","currentTarget","value","map","name","idx","display","justifyContent","ReactionsView","timeElapsed","setTimeElapsed","noReactions","setNoReactions","thumbsUp","setThumbsUp","thumbsUpPercent","Math","round","timer","setInterval","reactionsLimit","updateReactions","clearInterval","marginLeft","marginRight","PickStudentView","pickedStudent","setPickedStudent","selectedOption","setSelectedOption","getRandomStudent","randomInteger","random","length","type","checked","id","onClick","App","basename","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.528a2242.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst HomeView = () => {\n  return (\n    <>\n      <main>\n        <div className='home-buttons-list'>\n          <Link to='/raised-hands'>\n            <button className='button is-info is-large home-button'>\n              ✋ View Raised Hands\n            </button>\n          </Link>\n          <Link to='/reactions'>\n            <button className='button is-info is-large home-button'>\n              👍 View Reactions\n            </button>\n          </Link>\n          <Link to='/pick-student'>\n            <button className='button is-info is-large home-button'>\n              🧑 Pick a Student\n            </button>\n          </Link>\n        </div>\n      </main>\n      <Link to='/'>\n        <button\n          style={{ visibility: 'hidden' }}\n          className='button is-success is-large'\n        >\n          Done\n        </button>\n      </Link>\n    </>\n  );\n};\n\nexport default HomeView;\n","const students = [\n  'Johnny McDonald',\n  'Carolyn Armstrong',\n  'Jane Fuller',\n  'Albert Rios',\n  'Bryan Campbell',\n  'Ann Perry',\n  'Catherine Matthews',\n  'Phillip Lawson',\n  'Christina Ruiz',\n  'Julie Edwards',\n];\n\n//TO DO, NOT EXPORTED YET\nconst students2 = [\n  { name: 'Student', raised_hands: false, reaction: ':)' },\n  { name: 'Student', raised_hands: false, reaction: ':)' },\n  { name: 'Student', raised_hands: false, reaction: ':)' },\n];\n\nexport default students;\n","//  for raised hands\nexport const studentsSortedLowest = [\n    'Jane Fuller',\n    'Carolyn Armstrong',\n    'Johnny McDonald',\n  ];\n\n  export default studentsSortedLowest;","// for rasied hands\nconst studentsSortedHighest = [\n  'Johnny McDonald',\n  'Carolyn Armstrong',\n  'Jane Fuller',\n];\n\nexport default studentsSortedHighest;\n","// for rasied hands\nconst studentsSortedAlpha = [\n  'Carolyn Armstrong',\n  'Jane Fuller',\n  'Johnny McDonald',\n];\n\nexport default studentsSortedAlpha;\n","// for rasied hands\nconst studentsSortedRandom = [\n  'Jane Fuller',\n  'Johnny McDonald',\n  'Carolyn Armstrong',\n];\n\nexport default studentsSortedRandom;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ClipLoader } from 'react-spinners';\n\nimport students from '../data/students';\nimport studentsSortedLowest from '../data/studentsSortedLowest';\nimport studentsSortedHighest from '../data/studentsSortedHighest';\nimport studentsSortedAlpha from '../data/studentsSortedAlpha';\nimport studentsSortedRandom from '../data/studentsSortedRandom';\n\nconst RaisedHandsView = () => {\n  const [studentsArray, setStudentsArray] = useState(students);\n\n  const [showFirst, setShowFirst] = useState(false);\n  const firstDelay = 2;\n\n  const [showSecond, setShowSecond] = useState(false);\n  const secondDelay = 4;\n\n  useEffect(() => {\n    let firstTimer = setTimeout(() => setShowFirst(true), firstDelay * 1000);\n    let secondTimer = setTimeout(() => setShowSecond(true), secondDelay * 1000);\n    return () => {\n      clearTimeout(firstTimer);\n      clearTimeout(secondTimer);\n    };\n  }, []);\n\n  const sortStudentsArray = (sort) => {\n    switch (sort) {\n      case 'lowest':\n        setStudentsArray(studentsSortedLowest);\n        break;\n      case 'highest':\n        setStudentsArray(studentsSortedHighest);\n        break;\n      case 'alpha':\n        setStudentsArray(studentsSortedAlpha);\n        break;\n      case 'random':\n        setStudentsArray(studentsSortedRandom);\n        break;\n      default:\n        setStudentsArray((prevState) => prevState);\n    }\n  };\n  return (\n    <>\n      <main>\n        <h2 className='is-size-3 has-text-weight-medium has-text-grey'>\n          View Raised Hands\n        </h2>\n        <div className='box'>\n          <div>\n            <span className='mr-3'>\n              <ClipLoader\n                color={'hsl(204, 86%, 53%)'}\n                loading={true}\n                size={30}\n              />\n            </span>\n            <span className='is-size-4 has-text-weight-medium'>\n              Waiting for newly raised hands...\n            </span>\n          </div>\n\n          <div className='select is-normal mt-4'>\n            <select onChange={(e) => sortStudentsArray(e.currentTarget.value)}>\n              <option value={'default'}>Sort by...</option>\n              <option value={'lowest'}>Lowest to highest participation</option>\n              <option value={'highest'}>Highest to lowest participation</option>\n              <option value={'alpha'}>Alphabetical</option>\n              <option value={'random'}>Random</option>\n            </select>\n          </div>\n          <ul className='is-size-3 mt-5'>\n            {showFirst &&\n              studentsArray.map((name, idx) => {\n                return idx <= 1 && <li key={idx}>{name}</li>;\n              })}\n            {showSecond &&\n              studentsArray.map((name, idx) => {\n                return idx > 1 && idx < 3 && <li key={idx}>{name}</li>;\n              })}\n          </ul>\n        </div>\n        <p className='has-text-weight-semibold'>Currently Raised Hands</p>\n        <p className='has-text-grey'>\n          These are persisting raised hands prior to visiting this page.\n        </p>\n        <ul\n          className='is-size-4 mt-3'\n          style={{ display: 'flex', justifyContent: 'center' }}\n        >\n          {students.map((name, idx) => {\n            return (\n              idx > 2 &&\n              idx < 5 && (\n                <li key={idx} className='mr-6'>\n                  {name}\n                </li>\n              )\n            );\n          })}\n        </ul>\n        <hr />\n        <span className='mr-4'>Is no one volunteering?</span>{' '}\n        <Link to='/pick-student'>\n          <button className='button is-info is-default'>\n            🧑 Go to Pick a Student\n          </button>\n        </Link>\n      </main>\n\n      <Link to='/'>\n        <button className='button is-success is-large done-button'>Done</button>\n      </Link>\n    </>\n  );\n};\n\nexport default RaisedHandsView;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ReactionsView = () => {\n  const totalStudents = 30;\n\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [noReactions, setNoReactions] = useState(totalStudents);\n  const [thumbsUp, setThumbsUp] = useState(0);\n\n  let thumbsUpPercent = Math.round((thumbsUp / totalStudents) * 100);\n\n  useEffect(() => {\n    let timer = setInterval(() => {\n      setTimeElapsed((prevState) => prevState + 1);\n    }, 1000);\n\n    let reactionsLimit = 26;\n    let reactionsIncrement = 4;\n\n    let updateReactions = setInterval(() => {\n      // 5 instances\n      reactionsLimit = reactionsLimit - reactionsIncrement;\n\n      if (reactionsLimit > 0) {\n        setThumbsUp((prevState) => prevState + reactionsIncrement);\n        setNoReactions((prevState) => prevState - reactionsIncrement);\n      }\n    }, 500);\n\n    return () => {\n      clearInterval(timer);\n      clearInterval(updateReactions);\n    };\n  }, []);\n\n  return (\n    <>\n      <main>\n        <h2 className='is-size-3 has-text-weight-medium\thas-text-grey'>\n          View Reactions\n        </h2>\n        <div className='box'>\n          <p className='has-text-weight-semibold'>\n            Reactions during this{' '}\n            <span className='has-text-info'>{timeElapsed}</span> second\n            period...\n          </p>\n          <div\n            className='has-text-weight-bold mt-3 reactions-list'\n            style={{ marginLeft: '16em', marginRight: '16em' }}\n          >\n            <div className='columns mb-1'>\n              <div className='column '>👍</div>\n              <div className='column'>{thumbsUp}</div>\n              <div className='column has-text-grey'>{thumbsUpPercent}%</div>\n            </div>\n            <div className='columns mb-1'>\n              <div className='column '>👏</div>\n              <div className='column'>0</div>\n              <div className='column has-text-grey'>0%</div>\n            </div>\n            <div className='columns mb-1'>\n              <div className='column '>❤️</div>\n              <div className='column'>0</div>\n              <div className='column has-text-grey'>0%</div>\n            </div>\n            <div className='columns mb-1'>\n              <div className='column '>😂</div>\n              <div className='column'>0</div>\n              <div className='column has-text-grey'>0%</div>\n            </div>\n            <div className='columns mb-1'>\n              <div className='column '>😮</div>\n              <div className='column'>0</div>\n              <div className='column has-text-grey'>0%</div>\n            </div>\n            <div className='columns mb-1'>\n              <div className='column '>🎉</div>\n              <div className='column'>0</div>\n              <div className='column has-text-grey'>0%</div>\n            </div>\n            <div className='columns mb-1'>\n              <div className='column '>✅ </div>\n              <div className='column'>0</div>\n              <div className='column has-text-grey'>0%</div>\n            </div>\n            <div className='columns mb-1'>\n              <div className='column '>❌</div>\n              <div className='column'>0</div>\n              <div className='column has-text-grey'>0%</div>\n            </div>\n          </div>\n          <span className='has-text-weight-medium mt-3 mr-6'>\n            No reactions: {noReactions}\n          </span>\n          <span>Total students: {totalStudents}</span>\n        </div>\n      </main>\n      <Link to='/'>\n        <button className='button is-success is-large done-button'>Done</button>\n      </Link>\n    </>\n  );\n};\n\nexport default ReactionsView;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport students from '../data/students';\n\nconst PickStudentView = () => {\n  const [pickedStudent, setPickedStudent] = useState(students[0]);\n  const [selectedOption, setSelectedOption] = useState(1);\n\n  const getRandomStudent = () => {\n    var randomInteger = ~~(Math.random() * students.length);\n\n    if (students[randomInteger] === pickedStudent) {\n      return randomInteger === students.length - 1\n        ? students[0]\n        : students[randomInteger + 1];\n    } else {\n      return students[randomInteger];\n    }\n  };\n\n  return (\n    <>\n      <main>\n        <h2 className='is-size-3 has-text-weight-medium\thas-text-grey'>\n          Pick a Student\n        </h2>\n        <div className='box'>\n          <div className='control is-size-5'>\n            <span className='has-text-weight-medium mr-3'>Pick:</span>\n\n            <label className='radio mr-4'>\n              <input\n                type='radio'\n                name='foobar'\n                checked={selectedOption === 1}\n                onChange={() => {\n                  setSelectedOption(1);\n                  setPickedStudent(getRandomStudent());\n                }}\n                className='mr-1'\n              />\n              Randomly\n            </label>\n            <label className='radio'>\n              <input\n                type='radio'\n                name='foobar'\n                checked={selectedOption === 2}\n                onChange={() => {\n                  setSelectedOption(2);\n                  setPickedStudent(getRandomStudent());\n                }}\n                className='mr-1'\n              />\n              Low Participation\n            </label>\n          </div>\n\n          <p className='is-size-2 ' id='picked-student'>\n            {pickedStudent}\n          </p>\n          <button\n            className='button is-info is-medium is-outlined'\n            onClick={() => setPickedStudent(getRandomStudent())}\n          >\n            Pick Another Student\n          </button>\n        </div>\n      </main>\n      <Link to='/'>\n        <button className='button is-success is-large done-button'>Done</button>\n      </Link>\n    </>\n  );\n};\n\nexport default PickStudentView;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\n//View\nimport HomeView from './views/HomeView';\nimport RaisedHandsView from './views/RaisedHandsView';\nimport ReactionsView from './views/ReactionsView';\nimport PickStudentView from './views/PickStudentView';\n\nconst App = () => {\n  return (\n    <div className='center'>\n      <div className='container'>\n        <header>\n          <h1 className='is-size-4 has-text-weight-medium has-text-grey-light\t'>\n            Conference Co-Pilot\n          </h1>\n        </header>\n        <Router basename=\"/is4300-project\">\n          <Switch>\n            <Route path='/raised-hands'>\n              <RaisedHandsView />\n            </Route>\n            <Route path='/reactions'>\n              <ReactionsView />\n            </Route>\n            <Route path='/pick-student'>\n              <PickStudentView />\n            </Route>\n            <Route path='/'>\n              <HomeView />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}