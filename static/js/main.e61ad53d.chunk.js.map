{"version":3,"sources":["views/HomeView.jsx","data/students.js","data/studentsSortedLowest.js","data/studentsSortedHighest.js","data/studentsSortedOldest.js","views/RaisedHandsView.jsx","views/ReactionsView.jsx","views/PickStudentView.jsx","App.js","index.js"],"names":["HomeView","className","to","style","visibility","students","studentsSortedLowest","studentsSortedHighest","studentsSortedOldest","RaisedHandsView","useState","studentsArray","setStudentsArray","showFirst","setShowFirst","showLast","setShowSecond","flashColorShowFirst","setFlashColorShowFirst","flashColorShowLast","setFlashColorShowLast","useEffect","firstTimer","setTimeout","firstDelay","firstFlashTimer","secondTimer","secondDelay","secondFlashTimer","clearTimeout","color","loading","size","display","justifyContent","alignItems","onChange","e","sort","sortStudentsArray","currentTarget","value","map","student","idx","ReactionsView","timeElapsed","setTimeElapsed","totalReactionsStudents","noReactions","setNoReactions","thumbsUp","setThumbsUp","thumbsUpPercent","Math","round","heartsPercent","timer","setInterval","prevState","reactionsLimit","updateReactions","updateHearts","clearInterval","marginLeft","marginRight","totalStudents","PickStudentView","pickedStudent","setPickedStudent","selectedOption","setSelectedOption","checkedLow","setCheckedLow","checkedAve","setCheckedAve","checkedHigh","setCheckedHigh","getRandomStudent","randomInteger","random","length","type","name","checked","id","onClick","App","basename","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e61ad53d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst HomeView = () => {\n  return (\n    <>\n      <main>\n        <div className='home-buttons-list'>\n          <Link to='/raised-hands'>\n            <span className='notify-badge'>2</span>\n            <button className='button is-info is-large home-button'>\n              ✋ View Raised Hands\n            </button>\n          </Link>\n          <Link to='/reactions'>\n            <button className='button is-info is-large home-button'>\n              👍 View Reactions\n            </button>\n          </Link>\n          <Link to='/pick-student'>\n            <button className='button is-info is-large home-button'>\n              🧑 Pick a Student\n            </button>\n          </Link>\n        </div>\n      </main>\n      <Link to='/'>\n        <button\n          style={{ visibility: 'hidden' }}\n          className='button is-success is-large'\n        >\n          Done\n        </button>\n      </Link>\n    </>\n  );\n};\n\nexport default HomeView;\n","const students = [\n  'Johnny McDonald',\n  'Jane Fuller',\n  'Carolyn Armstrong',\n  'Albert Rios',\n  'Bryan Campbell',\n  'Ann Perry',\n  'Catherine Matthews',\n  'Phillip Lawson',\n  'Christina Ruiz',\n  'Julie Edwards',\n];\n\n//TO DO, NOT EXPORTED YET\nconst students2 = [\n  { name: 'Student', raised_hands: false, reaction: ':)' },\n  { name: 'Student', raised_hands: false, reaction: ':)' },\n  { name: 'Student', raised_hands: false, reaction: ':)' },\n];\n\nexport default students;\n","//  for raised hands\nexport const studentsSortedLowest = [\n  'Jane Fuller',\n  'Albert Rios',\n  'Bryan Campbell',\n  'Johnny McDonald',\n  'Carolyn Armstrong',\n];\n\nexport default studentsSortedLowest;\n","// for rasied hands\nconst studentsSortedHighest = [\n  'Carolyn Armstrong',\n  'Johnny McDonald',\n  'Bryan Campbell',\n  'Albert Rios',\n  'Jane Fuller',\n];\n\nexport default studentsSortedHighest;\n","// for rasied hands\nconst studentsSortedOldest = [\n  'Bryan Campbell',\n  'Albert Rios',\n  'Carolyn Armstrong',\n  'Jane Fuller',\n  'Johnny McDonald',\n];\n\nexport default studentsSortedOldest;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ClipLoader } from 'react-spinners';\n\nimport students from '../data/students';\nimport studentsSortedLowest from '../data/studentsSortedLowest';\nimport studentsSortedHighest from '../data/studentsSortedHighest';\nimport studentsSortedOldest from '../data/studentsSortedOldest';\n\nconst RaisedHandsView = () => {\n  const [studentsArray, setStudentsArray] = useState(students);\n\n  const [showFirst, setShowFirst] = useState(false);\n  const firstDelay = 2;\n\n  const [showLast, setShowSecond] = useState(false);\n  const secondDelay = 4;\n\n  const [flashColorShowFirst, setFlashColorShowFirst] = useState(true);\n  const [flashColorShowLast, setFlashColorShowLast] = useState(true);\n\n  useEffect(() => {\n    let firstTimer = setTimeout(() => setShowFirst(true), firstDelay * 1000);\n    let firstFlashTimer = setTimeout(\n      () => setFlashColorShowFirst(false),\n      firstDelay * 1000 + 500\n    );\n\n    let secondTimer = setTimeout(() => setShowSecond(true), secondDelay * 1000);\n    let secondFlashTimer = setTimeout(\n      () => setFlashColorShowLast(false),\n      secondDelay * 1000 + 500\n    );\n    return () => {\n      clearTimeout(firstTimer);\n      clearTimeout(firstFlashTimer);\n      clearTimeout(secondTimer);\n      clearTimeout(secondFlashTimer);\n    };\n  }, []);\n\n  const sortStudentsArray = (sort) => {\n    switch (sort) {\n      case 'lowest':\n        setStudentsArray(studentsSortedLowest);\n        break;\n      case 'highest':\n        setStudentsArray(studentsSortedHighest);\n        break;\n      case 'oldest':\n        setStudentsArray(studentsSortedOldest);\n        break;\n      default:\n        setStudentsArray(students);\n    }\n  };\n  return (\n    <>\n      <main>\n        <h2 className='is-size-3 has-text-weight-medium has-text-grey'>\n          View Raised Hands\n        </h2>\n        <div className='box'>\n          <div>\n            <span className='mr-3'>\n              <ClipLoader\n                color={'hsl(204, 86%, 53%)'}\n                loading={true}\n                size={30}\n              />\n            </span>\n            <span className='is-size-4 has-text-weight-medium'>\n              Waiting for newly raised hands...\n            </span>\n          </div>\n\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <span className='has-text-weight-medium mr-3'>Sort By:</span>\n            <div className='select is-normal mt-4'>\n              <select\n                onChange={(e) => sortStudentsArray(e.currentTarget.value)}\n              >\n                <option value={'newest'}>Newest to Oldest</option>\n                <option value={'oldest'}>Oldest to Newest</option>\n                <option value={'lowest'}>Low to High Participation</option>\n                <option value={'highest'}>High to Low Participation</option>\n              </select>\n            </div>\n          </div>\n          {\n            <ul className='is-size-3 mt-5'>\n              {studentsArray.map((student, idx) => {\n                if (student === 'Johnny McDonald') {\n                  return (\n                    showLast && (\n                      <li key={idx}>\n                        <span\n                          className={flashColorShowLast ? 'has-text-link' : ''}\n                        >\n                          {student}\n                        </span>{' '}\n                        <span className='is-size-6 has-text-weight-semibold has-text-grey'>\n                          (few seconds ago)\n                        </span>\n                      </li>\n                    )\n                  );\n                } else if (\n                  student === 'Jane Fuller' ||\n                  student === 'Carolyn Armstrong'\n                ) {\n                  return (\n                    showFirst && (\n                      <li key={idx}>\n                        <span\n                          className={flashColorShowFirst ? 'has-text-link' : ''}\n                        >\n                          {student}\n                        </span>{' '}\n                        <span className='is-size-6 has-text-weight-semibold has-text-grey'>\n                          (few seconds ago)\n                        </span>\n                      </li>\n                    )\n                  );\n                } else if (\n                  student === 'Albert Rios' ||\n                  student === 'Bryan Campbell'\n                ) {\n                  return (\n                    <li key={idx}>\n                      <span>{student}</span>{' '}\n                      <span className='is-size-6 has-text-weight-semibold has-text-grey'>\n                        (2 minutes ago)\n                      </span>\n                    </li>\n                  );\n                }\n              })}\n            </ul>\n          }\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <span className='mr-4'>Is no one volunteering?</span>{' '}\n          <Link to='/pick-student'>\n            <button className='button is-info is-medium'>\n              🧑 Go to Pick a Student\n            </button>\n          </Link>\n        </div>\n      </main>\n\n      <Link to='/'>\n        <button className='button is-success is-large done-button'>Done</button>\n      </Link>\n    </>\n  );\n};\n\nexport default RaisedHandsView;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ReactionsView = () => {\n  const totalHeartStudents = 2;\n  const totalReactionsStudents = 30;\n  const totalStudents = totalReactionsStudents + totalHeartStudents + 2;\n\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [noReactions, setNoReactions] = useState(totalStudents);\n  const [thumbsUp, setThumbsUp] = useState(1);\n\n  let thumbsUpPercent = Math.round((thumbsUp / (totalStudents)) * 100);\n  let heartsPercent = Math.round((totalHeartStudents / totalStudents) * 100);\n\n  useEffect(() => {\n    let timer = setInterval(() => {\n      setTimeElapsed((prevState) => prevState + 1);\n    }, 1000);\n\n    let reactionsLimit = totalReactionsStudents;\n    let reactionsIncrement = 4;\n\n    let updateReactions = setInterval(() => {\n      // 5 instances\n      reactionsLimit = reactionsLimit - reactionsIncrement;\n\n      if (reactionsLimit > 0) {\n        setThumbsUp((prevState) => prevState + reactionsIncrement);\n        setNoReactions((prevState) => prevState - reactionsIncrement);\n      }\n    }, 500);\n\n    let updateHearts = setTimeout(() => {\n        setNoReactions((prevState) => prevState - totalHeartStudents);\n    }, 1000);\n\n    return () => {\n      clearInterval(timer);\n      clearInterval(updateReactions);\n      clearTimeout(updateHearts);\n    };\n  }, []);\n\n  return (\n    <>\n      <main>\n        <h2 className='is-size-3 has-text-weight-medium\thas-text-grey'>\n          View Reactions\n        </h2>\n        <div className='box'>\n          <p className='has-text-weight-semibold'>\n            Reactions during this <span>{timeElapsed}</span> second period...\n          </p>\n          <div\n            className='has-text-weight-bold is-size-2 mt-5 mb-5 reactions-list'\n            style={{ marginLeft: '10em', marginRight: '10em' }}\n          >\n            <div className='columns mb-1'>\n              <div className='column '>👍</div>\n              <div className='column'>{thumbsUp}</div>\n              <div className='column has-text-grey'>{thumbsUpPercent}%</div>\n            </div>\n            {timeElapsed > 1 && (\n              <div className='columns mb-1'>\n                <div className='column '>❤️</div>\n                <div className='column'>{totalHeartStudents}</div>\n                <div className='column has-text-grey'>{heartsPercent}%</div>\n              </div>\n            )}\n          </div>\n          <span className='mt-3 mr-6'>Total students: {totalStudents + 1}</span>\n          <span className='has-text-weight-medium mt-3 mr-6'>\n            Students without reactions: {noReactions}\n          </span>\n        </div>\n      </main>\n      <Link to='/'>\n        <button className='button is-success is-large done-button'>Done</button>\n      </Link>\n    </>\n  );\n};\n\nexport default ReactionsView;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport students from '../data/students';\n\nconst PickStudentView = () => {\n  const [pickedStudent, setPickedStudent] = useState(students[0]);\n  const [selectedOption, setSelectedOption] = useState(1);\n  const [checkedLow, setCheckedLow] = useState(true);\n  const [checkedAve, setCheckedAve] = useState(false);\n  const [checkedHigh, setCheckedHigh] = useState(false);\n\n  const getRandomStudent = () => {\n    var randomInteger = ~~(Math.random() * students.length);\n\n    if (students[randomInteger] === pickedStudent) {\n      return randomInteger === students.length - 1\n        ? students[0]\n        : students[randomInteger + 1];\n    } else {\n      return students[randomInteger];\n    }\n  };\n\n  return (\n    <>\n      <main>\n        <h2 className='is-size-3 has-text-weight-medium\thas-text-grey'>\n          Pick a Student\n        </h2>\n        <div className='box'>\n          <div className='control is-size-5'>\n            <span className='has-text-weight-medium mr-3'>Pick:</span>\n\n            <label className='radio mr-4'>\n              <input\n                type='radio'\n                name='foobar'\n                checked={selectedOption === 1}\n                onChange={() => {\n                  setSelectedOption(1);\n                  setPickedStudent(getRandomStudent());\n                }}\n                className='mr-1'\n              />\n              Randomly\n            </label>\n            <label className='radio mr-4'>\n              <input\n                type='radio'\n                name='foobar'\n                checked={selectedOption === 2}\n                onChange={() => {\n                  setSelectedOption(2);\n                  setPickedStudent(getRandomStudent());\n                }}\n                className='mr-1'\n              />\n              Session Participation\n            </label>\n            <label className='radio'>\n              <input\n                type='radio'\n                name='foobar'\n                checked={selectedOption === 3}\n                onChange={() => {\n                  setSelectedOption(3);\n                  setPickedStudent(getRandomStudent());\n                }}\n                className='mr-1'\n              />\n              Cumulative Participation\n            </label>\n          </div>\n\n          <div\n            className='mt-5'\n            style={\n              selectedOption === 2 || selectedOption == 3\n                ? { display: 'flex', justifyContent: 'center' }\n                : { display: 'none' }\n            }\n          >\n            <div style={{ marginRight: '5em', marginLeft: '5em' }}>\n            <span className='has-text-weight-medium mr-3'>Include:</span>\n\n              <label className='checkbox mr-4'>\n                <input\n                  type='checkbox'\n                  checked={checkedLow}\n                  onChange={() => {\n                    setCheckedLow((prevState) => !prevState);\n                    setPickedStudent(getRandomStudent());\n                  }}\n                />\n                <span className='ml-1'>Low Participation</span>\n              </label>\n              <label className='checkbox mr-4'>\n                <input\n                  type='checkbox'\n                  checked={checkedAve}\n                  onChange={() => {\n                    setCheckedAve((prevState) => !prevState);\n                    setPickedStudent(getRandomStudent());\n                  }}\n                />\n                <span className='ml-1'>Average Participation</span>\n              </label>\n              <label className='checkbox'>\n                <input\n                  type='checkbox'\n                  checked={checkedHigh}\n                  onChange={() => {\n                    setCheckedHigh((prevState) => !prevState);\n                    setPickedStudent(getRandomStudent());\n                  }}\n                />\n                <span className='ml-1'>High Participation</span>\n              </label>\n            </div>\n          </div>\n\n          <p className='is-size-2 ' id='picked-student'>\n            {pickedStudent}\n          </p>\n          <button\n            className='button is-info is-medium is-outlined'\n            onClick={() => setPickedStudent(getRandomStudent())}\n          >\n            Pick Another Student\n          </button>\n        </div>\n      </main>\n      <Link to='/'>\n        <button className='button is-success is-large done-button'>Done</button>\n      </Link>\n    </>\n  );\n};\n\nexport default PickStudentView;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n//View\nimport HomeView from './views/HomeView';\nimport RaisedHandsView from './views/RaisedHandsView';\nimport ReactionsView from './views/ReactionsView';\nimport PickStudentView from './views/PickStudentView';\n\nconst App = () => {\n  return (\n    <div className='center'>\n      <div className='container'>\n        <header>\n          <h1 className='is-size-4 has-text-weight-medium has-text-grey-light\t'>\n            Conference Co-Pilot\n          </h1>\n        </header>\n        <Router basename=\"/is4300-project\">\n          <Switch>\n            <Route path='/raised-hands'>\n              <RaisedHandsView />\n            </Route>\n            <Route path='/reactions'>\n              <ReactionsView />\n            </Route>\n            <Route path='/pick-student'>\n              <PickStudentView />\n            </Route>\n            <Route path='/'>\n              <HomeView />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}